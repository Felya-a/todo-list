{"version":3,"sources":["logo.svg","assets/images/user.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","components/common/FormsControls/FormsControls.jsx","redux/api.js","redux/todoListReducer.js","redux/authReducer.js","assets/images/arrow-exit.svg","hoc/Modal.jsx","components/Login/Login.jsx","components/Preloader/Preloader.jsx","components/List/DeleteWarning/DeleteWarning.jsx","assets/images/dry-clean.svg","assets/images/check1.svg","assets/images/check0.svg","assets/images/delete.svg","components/List/Task/Task.jsx","assets/images/info.svg","assets/images/add.svg","components/List/List.jsx","components/Main/Main.jsx","redux/initializeReducer.js","components/AddList/AddList.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js"],"names":["connect","state","login","auth","props","history","useHistory","className","onClick","push","src","UserIMG","alt","to","Footer","FormsControl","input","meta","hasError","touched","error","name","Input","instance","axios","withCredentials","baseURL","headers","Initialize","get","formData","post","delete","TodoAPI","title","id","put","idList","taskText","count","page","idTask","complited","status","Number","SET_LIST","DELETE_LIST","CLEAN_LISTS","SET_TASKS","SET_NEW_TASK","DELETE_TASK","SET_TASK_AFTER_CHENGE","deleteTask","type","setTaskAfterChenge","task","createNewListTC","dispatch","a","data","resultCode","getListsTC","response","lists","idsList","map","item","Promise","all","then","result","tasks","initialState","listsIds","todoListReducer","action","length","filter","index","items","todoListId","AUTH_ME","LOGOUT_USER","initializeUser","email","initializeUserTC","isAuth","authReducer","mapStateToProps","Modal","Component","useState","isActive","setActive","useEffect","setTimeout","unmount","cn","e","stopPropagation","arrowExit","LoginReduxFrom","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","htmlFor","compose","withRouter","loginingTC","_formData","password","rememberMe","logoutTC","Preloader","deleteListTC","useParams","deleteList","onKeyPress","console","log","code","Task","editMode","setEditMode","completed","setCompleted","setTaskText","loadingTime","setLoadingTime","Boolean","chengeCompleted","chengeComplitedStatusTC","chengeEditMode","chengeTaskTextTC","check0IMG","check1IMG","cleanCircle","onDoubleClick","value","onChange","target","onBlur","autoFocus","maxLength","deleteTaskTC","DeleteIMG","renameListTC","createNewTaskTC","done","infoAboutList","editTitle","setEditTitle","setTitle","InfoIMG","AddIMG","todo","Array","isArray","SET_INIT","initialized","initializeReducer","setValue","init","initializeAppTC","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"kcAAe,I,6BCAA,G,OAAA,IAA0B,kC,OCsB1BA,eAJS,SAACC,GAAD,MAAY,CAClCC,MAAOD,EAAME,KAAKD,SAGLF,EAjBA,SAACI,GACd,IAAMC,EAAUC,cAChB,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAf,uBACA,sBAAKA,UAAU,qBAAqBC,QAAS,kBAAMH,EAAQI,KAAK,WAAhE,UACE,qBAAKC,IAAKC,EAASC,IAAI,aACvB,cAAE,IAAF,CAAUL,UAAU,mBAAmBM,GAAE,SAAzC,SAAuDT,EAAMF,OAAS,qBCL/DY,G,OANA,SAACV,GACd,OACE,qBAAKG,UAAU,a,qFCDbQ,EAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASb,EAAY,iBAC5Cc,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACE,cAAChB,EAAMiB,KAAP,uCAAgBjB,GAAWY,GAA3B,IAAkCT,UAAW,eAAiBW,EAAW,SAAW,QAc3EI,EAAQ,SAAClB,GACpB,OAAO,cAAC,EAAD,aAAciB,KAAK,SAAYjB,K,kBCnBlCmB,E,OAAWC,OAAa,CAC5BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACP,UAAW,0CAIFC,EAAa,WAEtB,OAAOL,EAASM,IAAI,YAFXD,EAAa,SAIfE,GACP,OAAOP,EAASQ,KAAK,aAAcD,IAL1BF,EAAa,WAQtB,OAAOL,EAASS,OAAO,eAIdC,EAAU,SACVC,GACT,OAAOX,EAASQ,KAAK,aAAc,CAAEG,WAF5BD,EAAU,WAKnB,OAAOV,EAASM,IAAI,eALXI,EAAU,SAOVE,EAAID,GACb,OAAOX,EAASa,IAAT,qBAA2BD,GAAM,CAAED,WARjCD,EAAU,SAUVE,GACT,OAAOZ,EAASS,OAAT,qBAA8BG,KAX5BF,EAAU,SAabI,EAAQC,GACd,OAAOf,EAASQ,KAAT,qBAA4BM,EAA5B,UAA4C,CAAEH,MAAOI,KAdnDL,EAAU,SAgBZI,GAAgC,IAAxBE,EAAuB,uDAAf,IAAKC,EAAU,uDAAH,EACnC,OAAOjB,EAASM,IAAT,qBAA2BQ,EAA3B,UAA2C,CAAEE,QAAOC,UAjBlDP,EAAU,SAoBLI,EAAQI,EAAQP,GAC9B,OAAOX,EAASa,IAAT,qBAA2BC,EAA3B,kBAA2CI,GAAU,CAAEP,WArBrDD,EAAU,SAuBLI,EAAQI,EAAQC,EAAWR,GACzC,OAAOX,EAASa,IAAT,qBAA2BC,EAA3B,kBAA2CI,GAAU,CAAEP,QAAOS,OAAQC,OAAOF,MAxB3ET,EAAU,SA0BVI,EAAQI,GACjB,OAAOlB,EAASS,OAAT,qBAA8BK,EAA9B,kBAA8CI,K,QC9CnDI,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAY,YACZC,EAAe,eACfC,EAAc,cACdC,EAAwB,wBAOjBC,EAAa,SAACf,EAAQI,GAAT,MAAqB,CAAEY,KAAMH,EAAab,SAAQI,WAC/Da,EAAqB,SAACC,GAAD,MAAW,CAAEF,KAAMF,EAAuBI,SAE/DC,EAAkB,SAACtB,GAAD,8CAAW,WAAOuB,GAAP,SAAAC,EAAA,sEACjBzB,EAAmBC,GADF,iBAE1ByB,KAAKC,WAFqB,uBAGtCH,EAASI,KAH6B,mBAI/B,GAJ+B,2CAAX,uDAOlBA,EAAa,yDAAM,WAAOJ,GAAP,iBAAAC,EAAA,sEACPzB,IADO,QACxB6B,EADwB,SAEhBL,GAjBSM,EAiBSD,EAASH,KAjBP,CAAEN,KAAMR,EAAUkB,WAkB9CC,EAAUF,EAASH,KAAKM,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,MAC/CgC,QAAQC,IAAR,YAAgBJ,EAAQC,KAAI,SAAAC,GAAI,OAAIjC,EAAiBiC,QAClDG,MAAK,SAACC,GACLb,EApB8B,CAAEJ,KAAML,EAAWuB,MAoB/BD,OANQ,iCAfR,IAACP,IAeO,OAAN,uDA+CpBS,EAAe,CACnBT,MAAO,GACPU,SAAU,IAgDGC,EA7CS,WAAmC,IAAlCzE,EAAiC,uDAAzBuE,EAAcG,EAAW,uCACxD,OAAQA,EAAOtB,MACb,KAAKR,EACH,OAA2B,GAAvB8B,EAAOZ,MAAMa,OAAoB,2BAAK3E,GAAZ,IAAmB8D,MAAO,OACjD,2BACF9D,GADL,IAEEwE,SAAS,YAAKE,EAAOZ,MAAME,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,OAC5C4B,MAAO,YAAIY,EAAOZ,OAAOE,KAAI,SAAAC,GAAI,kCAAUA,GAAV,IAAgBK,MAAO,UAE5D,KAAKxB,EACH,OAAO,2BACF9C,GADL,IAEE8D,MAAO,KAEX,KAAKjB,EACH,OAAO,2BACF7C,GADL,IAEE8D,MAAM,YAAK9D,EAAM8D,MAAMc,QAAO,SAAAX,GAAI,OAAIA,EAAK/B,IAAMwC,EAAOtC,aAE5D,KAAKW,EACH,OAAO,2BACF/C,GADL,IAEE8D,MAAM,YAAK9D,EAAM8D,MAAME,KAAI,SAACC,EAAMY,GAAP,mBAAC,eAAsBZ,GAAvB,IAA6BK,MAAM,YAAKI,EAAOJ,MAAMO,GAAOnB,KAAKoB,eAEhG,KAAK9B,EACH,OAAO,2BACFhD,GADL,IAEE8D,MAAM,YAAK9D,EAAM8D,MAAME,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,IAAMwC,EAAOpB,KAAKyB,WAAvB,2BAA0Cd,GAA1C,IAAgDK,MAAM,CAAEI,EAAOpB,MAAV,mBAAmBW,EAAKK,UAAYL,QAEhI,KAAKhB,EACH,OAAO,2BACFjD,GADL,IAEE8D,MAAM,YAAK9D,EAAM8D,MAAME,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,IAAMwC,EAAOtC,OAAlB,2BAAiC6B,GAAjC,IAAuCK,MAAOL,EAAKK,MAAMM,QAAO,SAAAX,GAAI,OAAIA,EAAK/B,IAAMwC,EAAOlC,YAAayB,QAE9I,KAAKf,EACH,OAAO,2BACFlD,GADL,IAGE8D,MAAM,YAAK9D,EAAM8D,MAAME,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,IAAMwC,EAAOpB,KAAKyB,WAAvB,2BAAyCd,GAAzC,IAA+CK,MAAOL,EAAKK,MAAMN,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,IAAMwC,EAAOpB,KAAKpB,GAAKwC,EAAOpB,KAAOW,OAAUA,QAExK,QACE,OAAOjE,IClHPgF,EAAU,UACVC,EAAc,cAEPC,GAAiB,SAAC,GAAD,IAAGjF,EAAH,EAAGA,MAAOkF,EAAV,EAAUA,MAAOjD,EAAjB,EAAiBA,GAAjB,MAA2B,CAAEkB,KAAM4B,EAAS/E,QAAOkF,QAAOjD,OAG3EkD,GAAmB,yDAAM,WAAO5B,GAAP,eAAAC,EAAA,sEACb9B,IADa,cAC9BkC,EAD8B,QAEtBH,KAAKC,YACjBH,EAAS0B,GAAerB,EAASH,KAAKA,OAHJ,mBAK7B,GAL6B,2CAAN,uDA6B1Ba,GAAe,CACnBc,QAAQ,EACRpF,MAAO,KACPkF,MAAO,KACPjD,GAAI,MA0BSoD,GAvBK,WAAmC,IAAlCtF,EAAiC,uDAAzBuE,GAAcG,EAAW,uCACpD,OAAQA,EAAOtB,MACb,KAAK4B,EACH,OAAO,2BACFhF,GADL,IAEEqF,QAAQ,EACRpF,MAAOyE,EAAOzE,MACdkF,MAAOT,EAAOS,MACdjD,GAAIwC,EAAOxC,KAEf,KAAK+C,EACH,OAAO,2BACFjF,GADL,IAEEqF,QAAQ,EACRpF,MAAO,KACPkF,MAAO,KACPjD,GAAI,OAER,QACE,OAAOlC,I,kBClEE,I,OAAA,IAA0B,wCCQrCuF,GAAkB,SAACvF,GAAD,MAAY,IAIrBwF,GAAQ,SAACC,GA8BpB,OAFqC1F,YAAQwF,GAARxF,EA3Bd,SAACI,GAEtB,MAA8BuF,oBAAS,GAAvC,oBAAOC,EAAP,KAAiBC,EAAjB,KACMxF,EAAUC,cAEhBwF,qBAAU,WACRC,YAAW,kBAAMF,GAAU,KAAO,MACjC,IACH,IAAMG,EAAU,WACdH,GAAU,GACVE,YAAW,WACT1F,EAAQI,KAAK,MACZ,MAGL,OACE,qBAAKF,UAAW0F,EAAG,QAAS,CAAE,OAAUL,IAAapF,QAAS,kBAAMwF,KAApE,SACE,sBAAKzF,UAAW0F,EAAG,iBAAkB,CAAE,OAAUL,IAAapF,QAAS,SAAA0F,GAAC,OAAIA,EAAEC,mBAA9E,UACI,qBAAK5F,UAAU,aAAaC,QAAS,kBAAMwF,KAA3C,SAAsD,qBAAKtF,IAAK0F,GAAWxF,IAAI,QACjF,cAAE8E,EAAF,2BAAgBtF,GAAhB,IAAuB4F,QAASA,cCcpCK,GAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EApCL,SAAClG,GACjB,OACE,uBAAMoG,SAAUpG,EAAMqG,aAAclG,UAAU,OAA9C,UACE,qBAAKA,UAAU,0BAAf,SACE,cAACmG,EAAA,EAAD,CACErD,KAAK,OACLsD,YAAY,QACZC,UAAWtF,EACXD,KAAK,YAIT,qBAAKd,UAAU,6BAAf,SACE,cAACmG,EAAA,EAAD,CACErD,KAAK,OACLsD,YAAY,WACZC,UAAWtF,EACXD,KAAK,eAIT,qBAAKd,UAAU,4BAAf,SACE,cAACmG,EAAA,EAAD,CACErD,KAAK,WACLuD,UAAWtF,EACXD,KAAK,aACLc,GAAG,iBAEP,uBAAO0E,QAAQ,aAAatG,UAAU,mBAAtC,yBAGA,wBAAQA,UAAU,qBAAlB,yBAoCSuG,gBACbrB,GACAsB,IACA/G,aAPsB,SAACC,GAAD,MAAY,CAClCqF,OAAQrF,EAAME,KAAKmF,UAMM,CAAE0B,WHvDH,SAAClF,GAAD,8CAAc,WAAO2B,GAAP,eAAAC,EAAA,6DAEhCuD,EAAY,CAChB7B,MAAO,oBACP8B,SAAU,YACVC,YAAY,GALwB,SAOfvF,EAAoBqF,GAPL,iBAQxBtD,KAAKC,WARmB,uBASpCH,EAAS4B,MACT5B,EAASI,KAV2B,mBAW7B,GAX6B,kDAAd,uDGuDeuD,SH9DjB,yDAAM,WAAO3D,GAAP,SAAAC,EAAA,sEACL9B,IADK,cAEd+B,KAAKC,aACjBH,EAZ6B,CAAEJ,KAAM6B,IAarCzB,EDR6B,CAAEJ,KAAMN,KCIX,2CAAN,yDG2DT+D,EA7BD,SAAC1G,GACb,IAKMoG,EAAQ,uCAAG,WAAO1E,GAAP,SAAA4B,EAAA,sEACOtD,EAAM4G,WAAWlF,GADxB,eAEF1B,EAAM4F,UAFJ,2CAAH,sDAKd,OACE,sBAAKzF,UAAU,QAAf,UACGH,EAAMkF,OACH,oBAAI/E,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,qBAEHH,EAAMkF,OACH,wBAAQ9E,QAjBD,WACbJ,EAAMgH,WACNhH,EAAM4F,WAeyBzF,UAAU,wBAAnC,oBACA,cAAC8F,GAAD,CAAgBG,SAAUA,UC5DrBa,I,OANG,SAACjH,GACjB,OACE,sBAAKG,UAAU,aAAf,UAA4B,wBAAW,6BC+B5BuG,I,cAAAA,aACbrB,GACAsB,IACA/G,YAAQ,KAAM,CAAEsH,aNEU,SAACnF,GAAD,8CAAQ,WAAOsB,GAAP,SAAAC,EAAA,sEACXzB,EAAmBE,GADR,iBAEpBwB,KAAKC,WAFe,uBAGhCH,EA7BmC,CAAEJ,KAAMP,EAAaT,OA6BpCF,IAHY,mBAIzB,GAJyB,2CAAR,yDMLb2E,EAzBO,SAAC1G,GACrB,IAAQ+B,EAAOoF,cAAPpF,GAGFqF,GAFUlH,cAEA,uCAAG,sBAAAoD,EAAA,sEACKtD,EAAMkH,aAAanF,GADxB,eAEJ/B,EAAM4F,UAFF,2CAAH,sDAUhB,OACE,sBAAKyB,WANc,SAACvB,GACpBwB,QAAQC,IAAIzB,GACE,SAAVA,EAAE0B,MAAiBJ,KAIQjH,UAAU,SAAzC,UACE,oBAAIA,UAAU,4BAAd,yBACA,qBAAKA,UAAU,eAAf,8PACA,wBAAQA,UAAU,0BAA0BC,QAASgH,EAArD,0BACA,wBAAQjH,UAAU,yBAAyBC,QAASJ,EAAM4F,QAA1D,uCC5BS,I,cAAA,IAA0B,uCCA1B,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,mCC6E1B6B,GAnEF,SAACzH,GACZ,MAAgCuF,oBAAS,GAAzC,oBAAOmC,EAAP,KAAiBC,EAAjB,KACA,EAAkCpC,oBAAS,GAA3C,oBAAOqC,EAAP,KAAkBC,EAAlB,KACA,EAAgCtC,qBAAhC,oBAAOrD,EAAP,KAAiB4F,EAAjB,KACA,EAAsCvC,oBAAS,GAA/C,oBAAOwC,EAAP,KAAoBC,EAApB,KAEAtC,qBAAU,WACJ1F,EAAM8B,OAAOgG,EAAY9H,EAAM8B,SAClC,CAAC9B,EAAM8B,QAEV4D,qBAAU,WACRsC,GAAe,GACfH,EAAaI,QAAQjI,EAAMuC,WAC1B,CAACvC,EAAMuC,SAEV,IAIM2F,EAAe,uCAAG,sBAAA5E,EAAA,sDACtB0E,GAAe,GACfhI,EAAMmI,wBAAwBnI,EAAM4E,WAAY5E,EAAM+B,IAAK6F,EAAW1F,GAFhD,2CAAH,qDAKfkG,EAAiB,WAEjBV,GAAYxF,GAAYlC,EAAM8B,OAAO9B,EAAMqI,iBAAiBrI,EAAM4E,WAAY5E,EAAM+B,GAAIG,GAC5FyF,GAAaD,IAOf,OADAJ,QAAQC,IAAI,eAEV,sBAAKpH,UAAU,OAAf,UACE,qBAAKA,UAAU,oBAAf,SACG4H,EACG,qBAAKzH,IAAKgI,GAAWnI,UAAU,4BAA4BK,IAAI,KAC/DoH,EACE,qBAAKxH,QAAS8H,EAAiB5H,IAAKiI,GAAW/H,IAAI,KACnD,qBAAKJ,QAAS8H,EAAiB5H,IAAKkI,GAAahI,IAAI,OAG7D,sBAAKiI,cAAeL,EAAgBjI,UAAU,aAA9C,UACGuH,EACG,uBACAvH,UAAU,yBACV8C,KAAK,OACLsD,YAAY,oBACZmC,MAAOxG,EACPyG,SArBa,SAAC7C,GACtBgC,EAAYhC,EAAE8C,OAAOF,QAqBbG,OAAQT,EACRU,WAAS,EACTC,UAAU,QAEV,sBAAM3I,QAAS,kBAAMkH,QAAQC,IAAIQ,EAAaH,IAAYzH,UAAW0F,EAAG,kBAAmB,CAAC,KAAQ+B,IAApG,UAAuH,OAAL5H,QAAK,IAALA,OAAA,EAAAA,EAAO8B,QAAS,kHAEtI,qBAAK3B,UAAU,eAAf,SAEE,sBAAMA,UAAU,4BAAhB,SAA4C,qBAAKC,QA7CtC,WACjBJ,EAAMgJ,aAAahJ,EAAM4E,WAAY5E,EAAM+B,KA4CiCzB,IAAK2I,GAAWzI,IAAI,gBCtErF,OAA0B,iCCA1B,OAA0B,gCC+D1BZ,eAAQ,KAAM,CAAEsJ,ad5BH,SAACnH,EAAID,GAAL,8CAAe,WAAOuB,GAAP,SAAAC,EAAA,sEAClBzB,EAAmBE,EAAID,GADL,cAE3ByB,KAAKC,YAAYH,EAASI,KAFC,2CAAf,uDc4BiB0F,gBdhBd,SAAClH,GAAD,8CAAY,WAAOoB,GAAP,eAAAC,EAAA,sEAClBzB,EAAgBI,EAAQ,iEADN,QACnCyB,EADmC,QAE3BH,KAAKC,YAAYH,GAlCNF,EAkC0BO,EAASH,KAAKA,KAAKO,KAlCnC,CAAEb,KAAMJ,EAAcM,UAgChB,iCAhCjB,IAACA,IAgCgB,OAAZ,uDcgB+BkF,iBdN9B,SAACpG,EAAQI,EAAQP,GAAjB,8CAA2B,WAAOuB,GAAP,eAAAC,EAAA,yDAEpDxB,EAFoD,gCAGpCD,EAAmBI,EAAQI,GAHS,cAI7CkB,KAAKC,YAAYH,EAASL,EAAWf,EAAQI,IAJA,uCAMhCR,EAAwBI,EAAQI,EAAQP,GANR,QAMjD4B,EANiD,QAOzCH,KAAKC,YAAYH,EAASH,EAAmBQ,EAASH,KAAKA,KAAKO,OAPvB,4CAA3B,uDcMgDqE,wBdKzC,SAAClG,EAAQI,EAAQ+G,EAAMlH,GAAvB,8CAAoC,WAAOmB,GAAP,eAAAC,EAAA,sEAClDzB,EAAwBI,EAAQI,EAAQ+G,EAAMlH,GADI,QACnEwB,EADmE,QAE3DH,KAAKC,YAAYH,EAASH,EAAmBQ,EAASH,KAAKA,KAAKO,OAFL,2CAApC,uDcLkEkF,adX7E,SAAC/G,EAAQI,GAAT,8CAAoB,WAAOgB,GAAP,SAAAC,EAAA,sEACvBzB,EAAmBI,EAAQI,GADJ,cAEhCkB,KAAKC,YAAYH,EAASL,EAAWf,EAAQI,IAFb,2CAApB,wDcWbzC,EAlDF,SAAC,GAAsH,IAApHyJ,EAAmH,EAAnHA,cAAelF,EAAoG,EAApGA,MAAO+E,EAA6F,EAA7FA,aAAcC,EAA+E,EAA/EA,gBAAiBd,EAA8D,EAA9DA,iBAAkBF,EAA4C,EAA5CA,wBAAyBa,EAAmB,EAAnBA,aAC9G,EAAkCzD,oBAAS,GAA3C,oBAAO+D,EAAP,KAAkBC,EAAlB,KACA,EAA0BhE,mBAAS8D,EAAcvH,OAAjD,oBAAOA,EAAP,KAAc0H,EAAd,KACMvJ,EAAUC,cACVkI,EAAiB,WACjBkB,GAAaxH,GAASuH,EAAcvH,OAAOoH,EAAaG,EAActH,GAAID,GAC9EyH,GAAcD,IAQhB,OAHA5D,qBAAU,WACR8D,EAASH,EAAcvH,SACtB,CAACuH,EAAcvH,QAEhB,sBAAK3B,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAcsI,cAAeL,EAA5C,UACGkB,EACG,uBACAnJ,UAAU,0BACV8C,KAAK,OACLyF,MAAO5G,EACP6G,SAdc,SAAC7C,GACvB0D,EAAS1D,EAAE8C,OAAOF,QAcVG,OAAQT,EACRU,WAAS,IAET,sBAAM3I,UAAU,mBAAhB,SAAoC2B,IAExC,sBAAK3B,UAAU,eAAf,UACE,sBAAMA,UAAU,0BAAhB,SAA0C,qBAAKG,IAAKmJ,GAASjJ,IAAI,OACjE,sBAAML,UAAU,4BAAhB,SAA4C,qBAAKC,QAAS,kBAAMH,EAAQI,KAAR,0BAAgCgJ,EAActH,MAAOzB,IAAK2I,GAAWzI,IAAI,aAG7I,qBAAKL,UAAU,cAAf,SACGgE,EAAMN,KAAI,SAACC,EAAMY,GAAP,OAAiB,cAAC,GAAD,aAE1B2D,iBAAkBA,EAClBc,gBAAiBA,EACjBhB,wBAAyBA,EACzBa,aAAcA,GACVlF,GALCY,QAQT,qBAAKvE,UAAU,WAAf,SACE,qBAAKC,QAAS,kBAAM+I,EAAgBE,EAActH,KAAKzB,IAAKoJ,GAAQlJ,IAAI,GAAGsB,MAAM,qBCjB1ElC,gBALS,SAACC,GAAD,MAAY,CAClC8D,MAAO9D,EAAM8J,KAAKhG,MAClBuB,OAAQrF,EAAME,KAAKmF,UAGmB,CAAE9B,mBAA3BxD,EA7BF,SAACI,GACZ,MAA0BuF,qBAA1B,8BAEgBrF,cAShB,OAAKF,EAAMkF,OACP0E,MAAMC,QAAQ7J,EAAM2D,QAAgC,GAAtB3D,EAAM2D,MAAMa,OAAoB,qBAAKrE,UAAU,oBAAf,SAAmC,cAAC,GAAD,MAEnG,sBAAKA,UAAU,OAAf,UAGGH,EAAM2D,MAAME,KAAI,SAACC,EAAMY,GAAP,OAAiB,cAAC,GAAD,CAAkB2E,cAAevF,EAAMK,MAAOL,EAAKK,OAAxCO,MAC7C,qBAAKvE,UAAU,UAAf,SAAyB,cAAC,IAAD,CAASM,GAAG,YAAZ,SAAwB,qBAAKH,IAAKoJ,GAAQlJ,IAAI,GAAGsB,MAAM,yBAP1D,QClBtBgI,GAAW,WAWX1F,GAAe,CACnB2F,aAAa,GAeAC,GAZW,WAAmC,IAAlCnK,EAAiC,uDAAzBuE,GAAcG,EAAW,uCAC1D,OAAQA,EAAOtB,MACX,KAAK6G,GACH,OAAO,2BACAjK,GADP,IAEIkK,aAAa,IAEnB,QACI,OAAOlK,ICYF6G,I,OAAAA,aACbrB,GACAzF,YAAQ,KAAM,CAAEwD,oBAFHsD,EA9BC,SAAC1G,GAEf,MAA0BuF,qBAA1B,oBAAOmD,EAAP,KAAcuB,EAAd,KAQM7D,GAPUlG,cAOF,uCAAG,sBAAAoD,EAAA,yDACVoF,EADU,iEAEO1I,EAAMoD,gBAAgBsF,GAF7B,eAGF1I,EAAM4F,UAHJ,2CAAH,sDAUd,OAEE,sBAAKzF,UAAU,WAAf,UACE,oBAAIA,UAAU,cAAd,yBACA,uBAAO2I,WAAS,EAACzB,WATA,SAACvB,GACpBwB,QAAQC,IAAIzB,GACE,SAAVA,EAAE0B,MAAiBpB,KAOsBuC,SAlB3B,SAAC7C,GACnBmE,EAASnE,EAAE8C,OAAOF,QAiBkDA,MAAOA,EAAOvI,UAAU,uBAAuB8C,KAAK,OAAOsD,YAAY,gGACzI,wBAAQnG,QAASgG,EAAUjG,UAAU,mBAArC,+DCDN,IAIeP,gBAJS,SAACC,GAAD,MAAY,CAClCkK,YAAalK,EAAMqK,KAAKH,eAGc,CAAEI,gBF7BX,yDAAM,WAAO9G,GAAP,SAAAC,EAAA,sEACbD,EAAS4B,MADI,eAEtB5B,EAASI,KACtBJ,EALkC,CAAEJ,KAAM6G,KAEP,2CAAN,wDE6BhBlK,EAvBf,SAAaI,GAIX,OAHA0F,qBAAU,WACR1F,EAAMmK,oBACL,IACEnK,EAAM+J,YAET,cAAC,IAAD,UACE,sBAAK5J,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOiK,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,GAAD,OACtC,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,GAAD,IACA,cAAC,EAAD,SATyB,cAAC,GAAD,OCPlBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvG,MAAK,YAAkD,IAA/CwG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,oBCCRO,GAAWC,aAAgB,CAC/BhL,KAAMoF,GACNwE,KAAMrF,EACN6B,KAAM6E,KACNd,KAAMF,KAGJiB,GAAQC,aAAYJ,GAAUK,aAAgBC,OAElDC,OAAOJ,MAAQA,GACAA,UCTfK,IAASjB,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJO,SAASC,eAAe,SAM1BnB,O","file":"static/js/main.80faf152.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/user.8cab7b59.svg\";","import { connect } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport UserIMG from '../../assets/images/user.svg';\r\n\r\nconst Header = (props) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__logo\">TODO-LIST</div>\r\n      <div className=\"header__loginBlock\" onClick={() => history.push(\"/login\")}>\r\n        <img src={UserIMG} alt=\"User IMG\" />\r\n        < NavLink className=\"loginBlock__item\" to={`/login`} >{props.login || \"Sing in\"}</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header);","import './Footer.scss'\r\nconst Footer = (props) => {\r\n  return (\r\n    <div className='footer'></div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import './FormsControls.scss';\r\n\r\nconst FormsControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  // <div className={\"formControl\" + (hasError ? \" error\" : '')}>\r\n  return (\r\n    <props.name {...props} {...input} className={\"formControl\" + (hasError ? \" error\" : '')}></props.name>\r\n  )\r\n}\r\n{/* {hasError &&\r\n      <span>\r\n        {meta.error}\r\n      </span>\r\n    } */}\r\n// </div>\r\n\r\nexport const Textarea = (props) => {\r\n  return <FormsControl name=\"textarea\" {...props} />\r\n}\r\n\r\nexport const Input = (props) => {\r\n  return <FormsControl name=\"input\" {...props} />\r\n}","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.1/\",\r\n  headers: {\r\n    \"API-KEY\": \"8aab515b-a7ff-412f-94c0-660df0312e47\",\r\n  }\r\n});\r\n\r\nexport const Initialize = {\r\n  authMe() {\r\n    return instance.get('auth/me')\r\n  },\r\n  logining(formData) {\r\n    return instance.post(\"auth/login\", formData)\r\n  },\r\n  logout() {\r\n    return instance.delete(\"auth/login\")\r\n  },\r\n}\r\n\r\nexport const TodoAPI = {\r\n  createList(title) {\r\n    return instance.post(\"todo-lists\", { title })\r\n  },\r\n  getLists() {\r\n    return instance.get(\"todo-lists\")\r\n  },\r\n  renameList(id, title) {\r\n    return instance.put(`todo-lists/${id}`, { title })\r\n  },\r\n  deleteList(id) {\r\n    return instance.delete(`todo-lists/${id}`)\r\n  },\r\n  setTask(idList, taskText) {\r\n    return instance.post(`todo-lists/${idList}/tasks`, { title: taskText })\r\n  },\r\n  getTasks(idList, count = 100, page = 1) {\r\n    return instance.get(`todo-lists/${idList}/tasks`, { count, page })\r\n  },\r\n  // Chenge Task\r\n  chengeTitleTask(idList, idTask, title) {\r\n    return instance.put(`todo-lists/${idList}/tasks/${idTask}`, { title })\r\n  },\r\n  chengeComplited(idList, idTask, complited, title) {\r\n    return instance.put(`todo-lists/${idList}/tasks/${idTask}`, { title, status: Number(complited) })\r\n  },\r\n  deleteTask(idList, idTask) {\r\n    return instance.delete(`todo-lists/${idList}/tasks/${idTask}`)\r\n  },\r\n}","import { TodoAPI } from \"./api\";\r\n\r\n// Action Type\r\nconst SET_LIST = \"SET_LIST\"\r\nconst DELETE_LIST = 'DELETE_LIST';\r\nconst CLEAN_LISTS = 'CLEAN_LISTS';\r\nconst SET_TASKS = 'SET_TASKS';\r\nconst SET_NEW_TASK = 'SET_NEW_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nconst SET_TASK_AFTER_CHENGE = 'SET_TASK_AFTER_CHENGE';\r\n// Action Creator\r\nexport const setLists = (lists) => ({ type: SET_LIST, lists });\r\nexport const setTasks = (tasks) => ({ type: SET_TASKS, tasks });\r\nexport const deleteList = (idList) => ({ type: DELETE_LIST, idList });\r\nexport const cleanLists = () => ({ type: CLEAN_LISTS, });\r\nexport const setNewTask = (task) => ({ type: SET_NEW_TASK, task });\r\nexport const deleteTask = (idList, idTask) => ({ type: DELETE_TASK, idList, idTask });\r\nexport const setTaskAfterChenge = (task) => ({ type: SET_TASK_AFTER_CHENGE, task });\r\n// Thunk Creator\r\nexport const createNewListTC = (title) => async (dispatch) => {\r\n  const response = await TodoAPI.createList(title);\r\n  if (!response.data.resultCode) {\r\n    dispatch(getListsTC());\r\n    return true;\r\n  }\r\n}\r\nexport const getListsTC = () => async (dispatch) => {\r\n  const response = await TodoAPI.getLists();\r\n  if (response) dispatch(setLists(response.data));\r\n  const idsList = response.data.map(item => item.id);\r\n  Promise.all([...idsList.map(item => TodoAPI.getTasks(item))]) // в массиве может быть много промисов\r\n    .then((result) => {\r\n      dispatch(setTasks(result))\r\n    })\r\n}\r\nexport const renameListTC = (id, title) => async (dispatch) => {\r\n  const response = await TodoAPI.renameList(id, title);\r\n  if (!response.data.resultCode) dispatch(getListsTC());\r\n}\r\nexport const deleteListTC = (id) => async (dispatch) => {\r\n  const response = await TodoAPI.deleteList(id);\r\n  if (!response.data.resultCode) {\r\n    dispatch(deleteList(id));\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const createNewTaskTC = (idList) => async (dispatch) => {\r\n  const response = await TodoAPI.setTask(idList, \"Ваша задача\")\r\n  if (!response.data.resultCode) dispatch(setNewTask(response.data.data.item))\r\n}\r\n\r\nexport const deleteTaskTC = (idList, idTask) => async (dispatch) => {\r\n  const response = await TodoAPI.deleteTask(idList, idTask);\r\n  if (!response.data.resultCode) dispatch(deleteTask(idList, idTask));\r\n}\r\n\r\nexport const chengeTaskTextTC = (idList, idTask, title) => async (dispatch) => {\r\n  // при сохранении таски и нулевым текстом она будет удалаться\r\n  if (!title) {\r\n    const resp = await TodoAPI.deleteTask(idList, idTask);\r\n    if (!resp.data.resultCode) dispatch(deleteTask(idList, idTask))\r\n  } else {\r\n    const response = await TodoAPI.chengeTitleTask(idList, idTask, title);\r\n    if (!response.data.resultCode) dispatch(setTaskAfterChenge(response.data.data.item));\r\n  }\r\n}\r\n\r\nexport const chengeComplitedStatusTC = (idList, idTask, done, taskText) => async (dispatch) => {\r\n  const response = await TodoAPI.chengeComplited(idList, idTask, done, taskText);\r\n  if (!response.data.resultCode) dispatch(setTaskAfterChenge(response.data.data.item));\r\n}\r\n\r\nconst initialState = {\r\n  lists: [],\r\n  listsIds: [],\r\n}\r\n\r\nconst todoListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LIST:\r\n      if (action.lists.length == 0) return { ...state, lists: null }; // если у пользователя нет листов\r\n      return {\r\n        ...state,\r\n        listsIds: [...action.lists.map(item => item.id)],\r\n        lists: [...action.lists].map(item => ({ ...item, tasks: [] })),\r\n      };\r\n    case CLEAN_LISTS:\r\n      return {\r\n        ...state,\r\n        lists: [],\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.filter(item => item.id != action.idList)]\r\n      }\r\n    case SET_TASKS:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.map((item, index) => ({ ...item, tasks: [...action.tasks[index].data.items] }))],\r\n      }\r\n    case SET_NEW_TASK:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.map(item => item.id == action.task.todoListId ? ({ ...item, tasks: [action.task, ...item.tasks] }) : item)],\r\n      }\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.map(item => item.id == action.idList ? ({ ...item, tasks: item.tasks.filter(item => item.id != action.idTask) }) : item)],\r\n      }\r\n    case SET_TASK_AFTER_CHENGE:\r\n      return {\r\n        ...state,\r\n        // мы в промисе получаем целую измененную таску и заменяем ей старую\r\n        lists: [...state.lists.map(item => item.id == action.task.todoListId ? { ...item, tasks: item.tasks.map(item => item.id == action.task.id ? action.task : item) } : item)],\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todoListReducer;","import { Initialize } from './api';\r\nimport { cleanLists, getListsTC } from './todoListReducer';\r\n\r\n\r\n// Action Type\r\nconst AUTH_ME = \"AUTH_ME\";\r\nconst LOGOUT_USER = \"LOGOUT_USER\";\r\n// Action Creator\r\nexport const initializeUser = ({ login, email, id }) => ({ type: AUTH_ME, login, email, id });\r\nexport const logoutUser = () => ({ type: LOGOUT_USER });\r\n// Thunk Creator\r\nexport const initializeUserTC = () => async (dispatch) => {\r\n  const response = await Initialize.authMe();\r\n  if (!response.data.resultCode) {\r\n    dispatch(initializeUser(response.data.data));\r\n  }\r\n  return true;\r\n}\r\nexport const logoutTC = () => async (dispatch) => {\r\n  const response = await Initialize.logout();\r\n  if (!response.data.resultCode) {\r\n    dispatch(logoutUser());\r\n    dispatch(cleanLists());\r\n  }\r\n}\r\nexport const loginingTC = (formData) => async (dispatch) => {\r\n  // TODO: delete later\r\n  const _formData = {\r\n    email: \"641027B@gmail.com\",\r\n    password: \"qwerty123\",\r\n    rememberMe: true,\r\n  }\r\n  const response = await Initialize.logining(_formData);\r\n  if (!response.data.resultCode) {\r\n    dispatch(initializeUserTC());\r\n    dispatch(getListsTC());\r\n    return true;\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  login: null,\r\n  email: null,\r\n  id: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ME:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        login: action.login,\r\n        email: action.email,\r\n        id: action.id,\r\n      }\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        login: null,\r\n        email: null,\r\n        id: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/arrow-exit.a244d6b7.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport * as cn from 'classnames';\r\nimport './Modal.scss';\r\nimport arrowExit from \"../assets/images/arrow-exit.svg\";\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n})\r\n\r\n// hoc это добавление компоненте дополнительных опций, за счет еще одного оборачивания в контейнерную компоненту\r\nexport const Modal = (Component) => {\r\n  const ModalComponent = (props) => {\r\n\r\n    const [isActive, setActive] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      setTimeout(() => setActive(true), 50);\r\n    }, [])\r\n    const unmount = () => {\r\n      setActive(false)\r\n      setTimeout(() => {\r\n        history.push(\"\");\r\n      }, 500)\r\n    }\r\n\r\n    return (\r\n      <div className={cn(\"modal\", { \"active\": isActive })} onClick={() => unmount()}>\r\n        <div className={cn(\"modal__content\", { \"active\": isActive })} onClick={e => e.stopPropagation()}>\r\n            <div className=\"modal_exit\" onClick={() => unmount()}><img src={arrowExit} alt=\"X\" /></div>\r\n          < Component {...props} unmount={unmount} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // <h3 className=\"modal_title\">Create List</h3>\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(ModalComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import './Login.scss'\r\nimport * as cn from 'classnames'\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { logoutTC, loginingTC } from '../../redux/authReducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { Modal } from '../../hoc/Modal';\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className='form'>\r\n      <div className=\"form__input_email input\">\r\n        <Field\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          component={Input}\r\n          name='email'\r\n        // validate={[required]} \r\n        />\r\n      </div>\r\n      <div className='form__input_password input'>\r\n        <Field\r\n          type=\"text\"\r\n          placeholder=\"Password\"\r\n          component={Input}\r\n          name='password'\r\n        // validate={[required]} \r\n        />\r\n      </div>\r\n      <div className='form__checkbox_rememberme'>\r\n        <Field\r\n          type=\"checkbox\"\r\n          component={Input}\r\n          name='rememberMe'\r\n          id='rememberMe' />\r\n      </div>\r\n      <label htmlFor=\"rememberMe\" className='form__input_text'>\r\n        Remember me\r\n      </label>\r\n      <button className='form__btnlogin btn'>Login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxFrom = reduxForm({ form: \"login\" })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const logout = () => {\r\n    props.logoutTC();\r\n    props.unmount();\r\n  }\r\n\r\n  const onSubmit = async (formData) => {\r\n    const promise = await props.loginingTC(formData);\r\n    if (promise) props.unmount();\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n      {props.isAuth\r\n        ? <h3 className=\"modal_title\">Quit</h3>\r\n        : <h3 className=\"modal_title\">Sing In</h3>\r\n      }\r\n      {props.isAuth\r\n        ? <button onClick={logout} className='login__logout-btn btn'>Logout</button>\r\n        : <LoginReduxFrom onSubmit={onSubmit} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n  Modal,\r\n  withRouter,\r\n  connect(mapStateToProps, { loginingTC, logoutTC }),\r\n)(Login);\r\n// export default compose(LoginHOC)(Login);","import './Preloader.scss'\r\nconst Preloader = (props) => {\r\n  return (\r\n    <div className=\"lds-ripple\"><div></div><div></div></div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Modal } from '../../../hoc/Modal';\r\nimport './DeleteWarning.scss'\r\nimport { deleteListTC } from '../../../redux/todoListReducer'\r\nimport { useHistory, withRouter } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst DeleteWarning = (props) => {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const deleteList = async () => {\r\n    const promise = await props.deleteListTC(id);\r\n    if (promise) props.unmount();\r\n  }\r\n\r\n  const keyDownEnter = (e) => {\r\n    console.log(e);\r\n    if (e.code == \"Enter\") deleteList();\r\n  }\r\n\r\n  return (\r\n    <div onKeyPress={keyDownEnter} className='delwar'>\r\n      <h3 className=\"modal_title delwar__title\">Delete List</h3>\r\n      <div className='delwar__text'>Вы действительно хотите удалить список задач?</div>\r\n      <button className='delwar__btn btn btn-yes' onClick={deleteList}>Да</button>\r\n      <button className='delwar__btn btn btn-no' onClick={props.unmount}>Нет</button>\r\n      {/* <button className='delwar__btn btn btn-no' onClick={() => history.push(\"\")}>Нет</button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  Modal,\r\n  withRouter,\r\n  connect(null, { deleteListTC })\r\n)(DeleteWarning);","export default __webpack_public_path__ + \"static/media/dry-clean.a137131d.svg\";","export default __webpack_public_path__ + \"static/media/check1.d644c682.svg\";","export default __webpack_public_path__ + \"static/media/check0.06efe408.svg\";","export default __webpack_public_path__ + \"static/media/delete.ec5dc9a8.svg\";","import { useEffect, useState } from 'react';\r\nimport './Task.scss';\r\nimport cleanCircle from '../../../assets/images/dry-clean.svg';\r\nimport check1IMG from '../../../assets/images/check1.svg';\r\nimport check0IMG from '../../../assets/images/check0.svg';\r\nimport DeleteIMG from '../../../assets/images/delete.svg';\r\nimport * as cn from 'classnames';\r\n\r\n\r\n\r\nconst Task = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [taskText, setTaskText] = useState();\r\n  const [loadingTime, setLoadingTime] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    if (props.title) setTaskText(props.title);\r\n  }, [props.title])\r\n\r\n  useEffect(() => {\r\n    setLoadingTime(false)\r\n    setCompleted(Boolean(props.status));\r\n  }, [props.status])\r\n\r\n  const deleteTask = () => {\r\n    props.deleteTaskTC(props.todoListId, props.id)\r\n  }\r\n\r\n  const chengeCompleted = async () => {\r\n    setLoadingTime(true)\r\n    props.chengeComplitedStatusTC(props.todoListId, props.id, !completed, taskText)\r\n  }\r\n\r\n  const chengeEditMode = () => {\r\n    // if (editMode && taskText != props.title) props.addTaskTC(props.idList, taskText)\r\n    if (editMode && taskText != props.title) props.chengeTaskTextTC(props.todoListId, props.id, taskText)\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  const chengeTaskText = (e) => {\r\n    setTaskText(e.target.value);\r\n  }\r\n  console.log(\"RENDER TASK\");\r\n  return (\r\n    <div className='task'>\r\n      <div className=\"task__check-block\">\r\n        {loadingTime\r\n          ? <img src={check0IMG} className='task__check-block_loading' alt=\"\" />\r\n          : completed\r\n            ? <img onClick={chengeCompleted} src={check1IMG} alt=\"\" />\r\n            : <img onClick={chengeCompleted} src={cleanCircle} alt=\"\" />\r\n        }\r\n      </div>\r\n      <div onDoubleClick={chengeEditMode} className=\"task__text\">\r\n        {editMode\r\n          ? <input\r\n            className='task__text_input input'\r\n            type=\"text\"\r\n            placeholder=\"Enter the task...\"\r\n            value={taskText}\r\n            onChange={chengeTaskText}\r\n            onBlur={chengeEditMode}\r\n            autoFocus\r\n            maxLength=\"100\"\r\n          />\r\n          : <span onClick={() => console.log(loadingTime, completed)} className={cn(\"task__text_span\", {\"done\": completed})}>{props?.title || \"нужно доделать TODO лист\"}</span>\r\n        }\r\n        <div className=\"help-buttons\">\r\n          {/* <span className='help-buttons__item info'><img src={InfoIMG} alt=\"\" /></span> */}\r\n          <span className='help-buttons__item delete'><img onClick={deleteTask} src={DeleteIMG} alt=\"\" /></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task;","export default __webpack_public_path__ + \"static/media/info.e67af643.svg\";","export default __webpack_public_path__ + \"static/media/add.e353df1d.svg\";","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Redirect, useHistory } from 'react-router-dom';\r\nimport { renameListTC, createNewTaskTC, chengeTaskTextTC, chengeComplitedStatusTC, deleteTaskTC } from '../../redux/todoListReducer';\r\nimport DeleteWarning from './DeleteWarning/DeleteWarning';\r\nimport './List.scss'\r\nimport Task from './Task/Task';\r\nimport DeleteIMG from '../../assets/images/delete.svg';\r\nimport InfoIMG from '../../assets/images/info.svg';\r\nimport AddIMG from '../../assets/images/add.svg';\r\n\r\n\r\n\r\nconst List = ({ infoAboutList, tasks, renameListTC, createNewTaskTC, chengeTaskTextTC, chengeComplitedStatusTC, deleteTaskTC }) => {\r\n  const [editTitle, setEditTitle] = useState(false);\r\n  const [title, setTitle] = useState(infoAboutList.title)\r\n  const history = useHistory();\r\n  const chengeEditMode = () => {\r\n    if (editTitle && title != infoAboutList.title) renameListTC(infoAboutList.id, title);\r\n    setEditTitle(!editTitle)\r\n  }\r\n  const chengeTitleText = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n  useEffect(() => {\r\n    setTitle(infoAboutList.title);\r\n  }, [infoAboutList.title])\r\n  return (\r\n    <div className='list'>\r\n      <div className=\"list__title\" onDoubleClick={chengeEditMode}>\r\n        {editTitle\r\n          ? <input\r\n            className=\"list__title_input input\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={chengeTitleText}\r\n            onBlur={chengeEditMode}\r\n            autoFocus\r\n          />\r\n          : <span className=\"list__title_span\">{title}</span>\r\n        }\r\n        <div className=\"help-buttons\">\r\n          <span className='help-buttons__item info'><img src={InfoIMG} alt=\"\" /></span>\r\n          <span className='help-buttons__item delete'><img onClick={() => history.push(`/delete-warning/${infoAboutList.id}`)} src={DeleteIMG} alt=\"\" /></span>\r\n        </div>\r\n      </div>\r\n      <div className=\"list__tasks\">\r\n        {tasks.map((item, index) => <Task\r\n          key={index}\r\n          chengeTaskTextTC={chengeTaskTextTC}\r\n          createNewTaskTC={createNewTaskTC}\r\n          chengeComplitedStatusTC={chengeComplitedStatusTC}\r\n          deleteTaskTC={deleteTaskTC}\r\n          {...item}\r\n        />)}\r\n      </div>\r\n      <div className=\"add-task\">\r\n        <img onClick={() => createNewTaskTC(infoAboutList.id)} src={AddIMG} alt=\"\" title=\"Add task\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, { renameListTC, createNewTaskTC, chengeTaskTextTC, chengeComplitedStatusTC, deleteTaskTC })(List);","import { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './Main.scss'\r\nimport { createNewListTC } from '../../redux/todoListReducer'\r\nimport List from '../List/List';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AddIMG from '../../assets/images/add.svg';\r\n\r\n\r\nconst Main = (props) => {\r\n  const [value, setValue] = useState();\r\n  // const tasks = [{title: \"task\"},]\r\n  const history = useHistory();\r\n  const changeInput = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const submit = () => {\r\n    props.createNewListTC(value)\r\n  }\r\n\r\n  if (!props.isAuth) return null;\r\n  if (Array.isArray(props.lists) && props.lists.length == 0) return <div className=\"preloader-wrapper\"><Preloader/></div>; \r\n  return (\r\n    <div className='main'>\r\n      {/* <input type=\"text\" onChange={changeInput} value={value} />\r\n      <button onClick={submit}>Создать</button> */}\r\n      {props.lists.map((item, index) => <List key={index} infoAboutList={item} tasks={item.tasks}/> )}\r\n      <div className=\"addList\"><NavLink to=\"/add-list\"><img src={AddIMG} alt=\"\" title=\"Add TODO list\"/></NavLink></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lists: state.todo.lists,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewListTC })(Main);","import { initializeUserTC } from \"./authReducer\";\r\nimport { getListsTC } from \"./todoListReducer\";\r\n\r\n\r\n// Action Type\r\nconst SET_INIT = 'SET_INIT';\r\n// Action Creator\r\nexport const setInitialize = () => ({ type: SET_INIT, });\r\n// Thunk Creator\r\nexport const initializeAppTC = () => async (dispatch) => {\r\n  const promise = await dispatch(initializeUserTC());\r\n  if (promise) dispatch(getListsTC());\r\n  dispatch(setInitialize());\r\n}\r\n\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n}\r\n\r\nconst initializeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case SET_INIT:\r\n        return {\r\n            ...state,\r\n            initialized: true,\r\n        }\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nexport default initializeReducer;","import './AddList.scss'\r\nimport * as cn from 'classnames';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createNewListTC } from '../../redux/todoListReducer';\r\nimport arrowExit from \"../../assets/images/arrow-exit.svg\";\r\nimport { compose } from 'redux';\r\nimport { Modal } from '../../hoc/Modal';\r\n\r\nconst AddList = (props) => {\r\n\r\n  const [value, setValue] = useState();\r\n  const history = useHistory();\r\n\r\n\r\n  const chengeValue = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    if (!value) return;\r\n    const promise = await props.createNewListTC(value);\r\n    if (promise) props.unmount();\r\n  }\r\n  const keyDownEnter = (e) => {\r\n    console.log(e);\r\n    if (e.code == \"Enter\") onSubmit();\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='add-list'>\r\n      <h3 className=\"modal_title\">Create List</h3>\r\n      <input autoFocus onKeyPress={keyDownEnter} onChange={chengeValue} value={value} className='add-list_input input' type=\"text\" placeholder=\"Введите название\" />\r\n      <button onClick={onSubmit} className='add-list_btn btn'>Создать</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  Modal,\r\n  connect(null, { createNewListTC }),\r\n)(AddList);","import logo from './logo.svg';\r\nimport './App.scss';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './components/Preloader/Preloader';\r\nimport Main from './components/Main/Main';\r\nimport { initializeAppTC } from './redux/initializeReducer';\r\nimport AddList from './components/AddList/AddList';\r\nimport DeleteWarning from './components/List/DeleteWarning/DeleteWarning';\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    props.initializeAppTC();\r\n  }, [])\r\n  if (!props.initialized) return <Preloader />;\r\n  return (\r\n    <BrowserRouter >\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Route path='/login' render={() => <Login/>} />\r\n        <Route path='/add-list' render={() => <AddList />} />\r\n        <Route path='/delete-warning/:id' render={() => <DeleteWarning />} />\r\n        <Main />\r\n        <Footer />\r\n      </div>\r\n    </BrowserRouter >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.init.initialized,\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializeAppTC })(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"./authReducer\";\r\nimport todoListReducer from \"./todoListReducer.js\";\r\nimport initializeReducer from \"./initializeReducer.js\"\r\n\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  todo: todoListReducer,\r\n  form: formReducer,\r\n  init: initializeReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore.js';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}