{"version":3,"sources":["logo.svg","assets/images/user.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","components/common/FormsControls/FormsControls.jsx","redux/api.js","redux/todoListReducer.js","redux/authReducer.js","assets/images/arrow-exit.svg","hoc/Modal.jsx","utils/validators/validators.js","components/Login/Login.jsx","components/List/DeleteWarning/DeleteWarning.jsx","assets/images/dry-clean.svg","assets/images/check1.svg","assets/images/check0.svg","assets/images/delete.svg","components/List/Task/Task.jsx","assets/images/info.svg","assets/images/add.svg","components/List/List.jsx","components/Main/Main.jsx","redux/initializeReducer.js","components/AddList/AddList.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js"],"names":["connect","state","login","auth","props","useHistory","className","Footer","FormsControl","input","meta","hasError","touched","error","name","Input","instance","axios","withCredentials","baseURL","headers","Initialize","get","formData","post","delete","SET_LIST","SET_NEW_LIST","RENAME_LIST","DELETE_LIST","CLEAN_LISTS","SET_TASKS","SET_NEW_TASK","DELETE_TASK","SET_TASK_AFTER_CHANGE","renameList","listID","title","type","setNewTask","deleteTask","taskID","setTaskAfterchange","task","setNewList","createNewListTC","dispatch","a","getListsTC","data","JSON","parse","localStorage","getItem","lists","initialState","listsIds","todoListReducer","action","uuid","id","tasks","completed","map","item","filter","index","items","AUTH_ME","LOGOUT_USER","initializeUser","email","isAuth","authReducer","mapStateToProps","Modal","Component","useState","isActive","setActive","history","useEffect","setTimeout","unmount","push","cn","onClick","e","stopPropagation","src","arrowExit","alt","required","value","LoginReduxFrom","reduxForm","form","setError","alert","onSubmit","handleSubmit","Field","placeholder","component","validate","htmlFor","compose","loginingTC","response","resultCode","errorMessage","messages","length","stopSubmit","_error","logoutTC","initialValues","password","withRouter","deleteListTC","useParams","deleteList","onKeyPress","code","Task","editMode","setEditMode","setCompleted","taskText","setTaskText","loadingTime","setLoadingTime","Boolean","changeCompleted","changeComplitedStatusTC","changeEditMode","changeTaskTextTC","check0IMG","check1IMG","cleanCircle","onChange","target","onBlur","autoFocus","maxLength","deleteTaskTC","DeleteIMG","renameListTC","createNewTaskTC","infoAboutList","editTitle","setEditTitle","setTitle","onDoubleClick","InfoIMG","AddIMG","todo","to","SET_INIT","initialized","initializeReducer","setValue","init","initializeAppTC","setItem","saveChangesToLocalStorage","stringify","console","log","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47be0ee9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/user.8cab7b59.svg\";","import { connect } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport UserIMG from '../../assets/images/user.svg';\r\n\r\nconst Header = (props) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__logo\">TODO-LIST</div>\r\n      {/* <div className=\"header__loginBlock\" onClick={() => history.push(\"/login\")}>\r\n        <img src={UserIMG} alt=\"User IMG\" />\r\n        < NavLink className=\"loginBlock__item\" to={`/login`} >{props.login || \"Sing in\"}</NavLink>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header);","import './Footer.scss'\r\nconst Footer = (props) => {\r\n  return (\r\n    <div className='footer'></div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import './FormsControls.scss';\r\n\r\nconst FormsControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  // <div className={\"formControl\" + (hasError ? \" error\" : '')}>\r\n  return (\r\n    <props.name {...props} {...input} className={\"formControl\" + (hasError ? \" error\" : '')}></props.name>\r\n  )\r\n}\r\n{/* {hasError &&\r\n      <span>\r\n        {meta.error}\r\n      </span>\r\n    } */}\r\n// </div>\r\n\r\nexport const Textarea = (props) => {\r\n  return <FormsControl name=\"textarea\" {...props} />\r\n}\r\n\r\nexport const Input = (props) => {\r\n  return <FormsControl name=\"input\" {...props} />\r\n}","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.1/\",\r\n  headers: {\r\n    \"API-KEY\": \"8aab515b-a7ff-412f-94c0-660df0312e47\",\r\n  }\r\n});\r\n\r\nexport const Initialize = {\r\n  authMe() {\r\n    return instance.get('auth/me')\r\n  },\r\n  logining(formData) {\r\n    return instance.post(\"auth/login\", formData)\r\n  },\r\n  logout() {\r\n    return instance.delete(\"auth/login\")\r\n  },\r\n}\r\n\r\nexport const TodoAPI = {\r\n  createList(title) {\r\n    return instance.post(\"todo-lists\", { title })\r\n  },\r\n  getLists() {\r\n    return instance.get(\"todo-lists\")\r\n  },\r\n  renameList(id, title) {\r\n    return instance.put(`todo-lists/${id}`, { title })\r\n  },\r\n  deleteList(id) {\r\n    return instance.delete(`todo-lists/${id}`)\r\n  },\r\n  setTask(idList, taskText) {\r\n    return instance.post(`todo-lists/${idList}/tasks`, { title: taskText })\r\n  },\r\n  getTasks(idList, count = 100, page = 1) {\r\n    return instance.get(`todo-lists/${idList}/tasks`, { count, page })\r\n  },\r\n  // change Task\r\n  changeTitleTask(idList, idTask, title) {\r\n    return instance.put(`todo-lists/${idList}/tasks/${idTask}`, { title })\r\n  },\r\n  changeComplited(idList, idTask, complited, title) {\r\n    return instance.put(`todo-lists/${idList}/tasks/${idTask}`, { title, status: Number(complited) })\r\n  },\r\n  deleteTask(idList, idTask) {\r\n    return instance.delete(`todo-lists/${idList}/tasks/${idTask}`)\r\n  },\r\n}","import { TodoAPI } from \"./api\"\r\nimport * as uuid from 'uuid'\r\n\r\n// Action Type\r\nconst SET_LIST = \"SET_LIST\"\r\nconst SET_NEW_LIST = \"SET_NEW_LIST\"\r\nconst RENAME_LIST = \"RENAME_LIST\"\r\nconst DELETE_LIST = 'DELETE_LIST'\r\nconst CLEAN_LISTS = 'CLEAN_LISTS'\r\nconst SET_TASKS = 'SET_TASKS'\r\nconst SET_NEW_TASK = 'SET_NEW_TASK'\r\nconst DELETE_TASK = 'DELETE_TASK'\r\nconst SET_TASK_AFTER_CHANGE = 'SET_TASK_AFTER_CHANGE'\r\n// Action Creator\r\nexport const setLists = (lists) => ({ type: SET_LIST, lists })\r\nexport const setTasks = (tasks) => ({ type: SET_TASKS, tasks })\r\nexport const deleteList = (listID) => ({ type: DELETE_LIST, listID })\r\nexport const renameList = (listID, title) => ({ type: RENAME_LIST, listID, title })\r\nexport const cleanLists = () => ({ type: CLEAN_LISTS, })\r\nexport const setNewTask = (listID) => ({ type: SET_NEW_TASK, listID })\r\nexport const deleteTask = (listID, taskID) => ({ type: DELETE_TASK, listID, taskID })\r\nexport const setTaskAfterchange = (task) => ({ type: SET_TASK_AFTER_CHANGE, task })\r\nexport const setNewList = (title) => ({ type: SET_NEW_LIST, title })\r\n// Thunk Creator\r\nexport const saveChangesToLocalStorage = () => (dispatch, state) => {\r\n  localStorage.setItem('data', JSON.stringify(state().todo.lists))\r\n}\r\n\r\nexport const createNewListTC = (title) => async (dispatch) => {\r\n  title = !title ? 'Задачи' : title\r\n  dispatch(setNewList(title))\r\n  return true\r\n}\r\nexport const getListsTC = () => async (dispatch) => {\r\n  const data = JSON.parse(localStorage.getItem('data'))\r\n  await dispatch(setLists(data))\r\n}\r\nexport const renameListTC = (id, title) => async (dispatch) => {\r\n  await dispatch(renameList(id, title))\r\n}\r\nexport const deleteListTC = (id) => async (dispatch) => {\r\n  await dispatch(deleteList(id))\r\n  return true\r\n}\r\n\r\nexport const createNewTaskTC = (listID) => async (dispatch) => {\r\n  await dispatch(setNewTask(listID))\r\n}\r\n\r\nexport const deleteTaskTC = (listID, taskID) => async (dispatch) => {\r\n  await dispatch(deleteTask(listID, taskID))\r\n}\r\n\r\nexport const changeTaskTextTC = (listID, taskID, title, completed) => async (dispatch) => {\r\n  // при сохранении таски и нулевым текстом она будет удалаться\r\n  if (!title) {\r\n    await dispatch(deleteTask(listID, taskID))\r\n  } else {\r\n    await dispatch(setTaskAfterchange({ listID, taskID, title, completed }))\r\n  }\r\n}\r\n\r\nexport const changeComplitedStatusTC = (listID, taskID, completed, title) => async (dispatch, state) => {\r\n  await dispatch(setTaskAfterchange({ listID, taskID, completed, title }))\r\n}\r\n\r\nconst initialState = {\r\n  lists: [],\r\n  listsIds: [],\r\n}\r\n\r\n/*\r\n'data' - [{\r\n  id: string\r\n  title: string\r\n  tasks: [\r\n    {\r\n      id: string\r\n      listID: string\r\n      text: string\r\n      completed: boolean\r\n    },\r\n  ]\r\n},]\r\n*/\r\n\r\nconst todoListReducer = (state = initialState, action) => {\r\n  const listID = uuid.v1()\r\n  const taskID = uuid.v1()\r\n  switch (action.type) {\r\n    case SET_LIST:\r\n      return {\r\n        lists: action.lists\r\n      }\r\n    case SET_NEW_LIST:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists, {\r\n          id: listID,\r\n          title: action.title,\r\n          tasks: [{\r\n            id: taskID,\r\n            listID: listID,\r\n            title: '',\r\n            completed: false\r\n          }]\r\n        }]\r\n      }\r\n    case RENAME_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.map(item => item.id == action.listID ? ({ ...item, title: action.title}) : item),\r\n      }\r\n    case CLEAN_LISTS:\r\n      return {\r\n        ...state,\r\n        lists: [],\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.filter(item => item.id != action.listID)]\r\n      }\r\n    case SET_TASKS:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.map((item, index) => ({ ...item, tasks: [...action.tasks[index].data.items] }))],\r\n      }\r\n    case SET_NEW_TASK:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.map(item => item.id == action.listID ? ({\r\n          ...item, tasks: [...item.tasks,\r\n          {\r\n            id: taskID,\r\n            listID: item.id,\r\n            title: '',\r\n            completed: false\r\n          }\r\n          ]\r\n        }) : item)],\r\n      }\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists.map(item => item.id == action.listID ? ({ ...item, tasks: item.tasks.filter(item => item.id != action.taskID) }) : item)],\r\n      }\r\n    case SET_TASK_AFTER_CHANGE:\r\n      return {\r\n        ...state,\r\n        // мы в промисе получаем целую измененную таску и заменяем ей старую\r\n        lists: [...state.lists.map(item => item.id == action.task.listID ? {\r\n          ...item, tasks: item.tasks.map(item => item.id == action.task.taskID ?\r\n            {\r\n              id: action.task.taskID,\r\n              listID: action.task.listID,\r\n              completed: action.task.completed,\r\n              title: action.task.title,\r\n            } : item)\r\n        } : item)],\r\n        // lists: [...state.lists.map(item => item.id == action.task.listID ? { ...item, tasks: item.tasks.map(item => item.id == action.task.id ? action.task : item) } : item)],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todoListReducer","import { stopSubmit } from 'redux-form';\r\nimport { Initialize } from './api';\r\nimport { cleanLists, getListsTC } from './todoListReducer';\r\n\r\n\r\n// Action Type\r\nconst AUTH_ME = \"AUTH_ME\";\r\nconst LOGOUT_USER = \"LOGOUT_USER\";\r\n// Action Creator\r\nexport const initializeUser = ({ login, email, id }) => ({ type: AUTH_ME, login, email, id });\r\nexport const logoutUser = () => ({ type: LOGOUT_USER });\r\n// Thunk Creator\r\nexport const initializeUserTC = () => async (dispatch) => {\r\n  const response = await Initialize.authMe();\r\n  if (!response.data.resultCode) {\r\n    dispatch(initializeUser(response.data.data));\r\n  }\r\n  return true;\r\n}\r\nexport const logoutTC = () => async (dispatch) => {\r\n  const response = await Initialize.logout();\r\n  if (!response.data.resultCode) {\r\n    dispatch(logoutUser());\r\n    dispatch(cleanLists());\r\n  }\r\n}\r\nexport const loginingTC = (formData) => async (dispatch) => {\r\n  const response = await Initialize.logining(formData);\r\n  if (!response.data.resultCode) {\r\n    dispatch(initializeUserTC());\r\n    dispatch(getListsTC());\r\n    return true;\r\n  } else if (response.data.resultCode == 1){\r\n\t\tlet errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n    dispatch(stopSubmit('login', { _error: errorMessage }))\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  login: null,\r\n  email: null,\r\n  id: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ME:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        login: action.login,\r\n        email: action.email,\r\n        id: action.id,\r\n      }\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        login: null,\r\n        email: null,\r\n        id: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/arrow-exit.a244d6b7.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport * as cn from 'classnames';\r\nimport './Modal.scss';\r\nimport arrowExit from \"../assets/images/arrow-exit.svg\";\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n})\r\n\r\n// hoc это добавление компоненте дополнительных опций, за счет еще одного оборачивания в контейнерную компоненту\r\nexport const Modal = (Component) => {\r\n  const ModalComponent = (props) => {\r\n\r\n    const [isActive, setActive] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      setTimeout(() => setActive(true), 50);\r\n    }, [])\r\n    const unmount = () => {\r\n      setActive(false)\r\n      setTimeout(() => {\r\n        history.push(\"\");\r\n      }, 500)\r\n    }\r\n\r\n    return (\r\n      <div className={cn(\"modal\", { \"active\": isActive })} onClick={() => unmount()}>\r\n        <div className={cn(\"modal__content\", { \"active\": isActive })} onClick={e => e.stopPropagation()}>\r\n            <div className=\"modal_exit\" onClick={() => unmount()}><img src={arrowExit} alt=\"X\" /></div>\r\n          < Component {...props} unmount={unmount} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // <h3 className=\"modal_title\">Create List</h3>\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(ModalComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n}\r\n","import './Login.scss'\r\nimport * as cn from 'classnames'\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { logoutTC, loginingTC } from '../../redux/authReducer'\r\nimport { compose } from 'redux';\r\nimport { Modal } from '../../hoc/Modal';\r\nimport { required } from '../../utils/validators/validators';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst LoginForm = (props) => {\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    if (props.error) setError(props.error);\r\n  }, [props.error])\r\n  if (error == \"Incorrect anti-bot symbols\") alert(\"Пройдите капчу на сайте https://social-network.samuraijs.com/\")\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"form\">\r\n      <div className=\"form__input_email input\">\r\n        <Field\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          component={Input}\r\n          name='email'\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div className='form__input_password input'>\r\n        <Field\r\n          type=\"text\"\r\n          placeholder=\"Password\"\r\n          component={Input}\r\n          name='password'\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div className='form__checkbox_rememberme'>\r\n        <Field\r\n          type=\"checkbox\"\r\n          component={Input}\r\n          name='rememberMe'\r\n          id='rememberMe' />\r\n      </div>\r\n      <label htmlFor=\"rememberMe\" className='form__input_text'>\r\n        Remember me\r\n      </label>\r\n      <div className=\"error\">\r\n        {props.error &&\r\n          <div className=\"error__message\">\r\n            <div>{props.error}</div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <button className='form__btnlogin btn'>Login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxFrom = reduxForm({ form: \"login\" })(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n  const logout = () => {\r\n    props.logoutTC();\r\n    props.unmount();\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    // const promise = await props.loginingTC(formData);\r\n    // if (promise) props.unmount();\r\n    props.loginingTC(formData)\r\n  }\r\n  return (\r\n    <div className='login'>\r\n      {props.isAuth\r\n        ? <h3 className=\"modal_title\">Quit</h3>\r\n        : <h3 className=\"modal_title\">Sing In</h3>\r\n      }\r\n      {props.isAuth\r\n        ? <button onClick={logout} className='login__logout-btn btn'>Logout</button>\r\n        : <LoginReduxFrom onSubmit={onSubmit} initialValues={{ email: 'free@samuraijs.com', password: 'free' }} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n  Modal,\r\n  connect(mapStateToProps, { loginingTC, logoutTC }),\r\n)(Login);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Modal } from '../../../hoc/Modal';\r\nimport './DeleteWarning.scss'\r\nimport { deleteListTC } from '../../../redux/todoListReducer'\r\nimport { useHistory, withRouter } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst DeleteWarning = (props) => {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const deleteList = async () => {\r\n    const promise = await props.deleteListTC(id);\r\n    if (promise) props.unmount();\r\n  }\r\n\r\n  const keyDownEnter = (e) => {\r\n    if (e.code == \"Enter\") deleteList();\r\n  }\r\n\r\n  return (\r\n    <div onKeyPress={keyDownEnter} className='delwar'>\r\n      <h3 className=\"modal_title delwar__title\">Delete List</h3>\r\n      <div className='delwar__text'>Вы действительно хотите удалить список задач?</div>\r\n      <button className='delwar__btn btn btn-yes' onClick={deleteList}>Да</button>\r\n      <button className='delwar__btn btn btn-no' onClick={props.unmount}>Нет</button>\r\n      {/* <button className='delwar__btn btn btn-no' onClick={() => history.push(\"\")}>Нет</button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  Modal,\r\n  withRouter,\r\n  connect(null, { deleteListTC })\r\n)(DeleteWarning);","export default __webpack_public_path__ + \"static/media/dry-clean.a137131d.svg\";","export default __webpack_public_path__ + \"static/media/check1.d644c682.svg\";","export default __webpack_public_path__ + \"static/media/check0.06efe408.svg\";","export default __webpack_public_path__ + \"static/media/delete.ec5dc9a8.svg\";","import { useEffect, useState } from 'react';\r\nimport './Task.scss';\r\nimport cleanCircle from '../../../assets/images/dry-clean.svg';\r\nimport check1IMG from '../../../assets/images/check1.svg';\r\nimport check0IMG from '../../../assets/images/check0.svg';\r\nimport DeleteIMG from '../../../assets/images/delete.svg';\r\nimport * as cn from 'classnames';\r\n\r\n\r\n\r\nconst Task = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [taskText, setTaskText] = useState();\r\n  const [loadingTime, setLoadingTime] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    if (props.title) setTaskText(props.title);\r\n  }, [props.title])\r\n\r\n  useEffect(() => {\r\n    setLoadingTime(false)\r\n    setCompleted(Boolean(props.completed));\r\n  }, [props.completed])\r\n\r\n  const deleteTask = () => {\r\n    props.deleteTaskTC(props.listID, props.id)\r\n  }\r\n\r\n  const changeCompleted = async () => {\r\n    setLoadingTime(true)\r\n    props.changeComplitedStatusTC(props.listID, props.id, !completed, taskText)\r\n  }\r\n\r\n  const changeEditMode = () => {\r\n    // if (editMode && taskText != props.title) props.addTaskTC(props.idList, taskText)\r\n    if (editMode && taskText != props.title) props.changeTaskTextTC(props.listID, props.id, taskText, props.completed)\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  const changeTaskText = (e) => {\r\n    setTaskText(e.target.value);\r\n  }\r\n\r\n  const keyDownEnter = (e) => {\r\n    if (e.code == \"Enter\") changeEditMode();\r\n  }\r\n\r\n  return (\r\n    <div className='task'>\r\n      <div className=\"task__check-block\">\r\n        {loadingTime\r\n          ? <img src={check0IMG} className='task__check-block_loading' alt=\"\" />\r\n          : completed\r\n            ? <img onClick={changeCompleted} src={check1IMG} alt=\"\" />\r\n            : <img onClick={changeCompleted} src={cleanCircle} alt=\"\" />\r\n        }\r\n      </div>\r\n      <div onClick={changeEditMode} className=\"task__text\">\r\n        {editMode\r\n          ? <input\r\n            className='task__text_input input'\r\n            type=\"text\"\r\n            placeholder=\"Enter task...\"\r\n            onKeyPress={keyDownEnter}\r\n            value={taskText}\r\n            onChange={changeTaskText}\r\n            onBlur={changeEditMode}\r\n            autoFocus\r\n            maxLength=\"100\"\r\n          />\r\n          : <span className={cn(\"task__text_span\", {\"done\": completed})}>{props.title}</span>\r\n        }\r\n        <div className=\"help-buttons\">\r\n          <span className='help-buttons__item delete'><img onClick={deleteTask} src={DeleteIMG} alt=\"\" /></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task;","export default __webpack_public_path__ + \"static/media/info.e67af643.svg\";","export default __webpack_public_path__ + \"static/media/add.e353df1d.svg\";","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, Redirect, useHistory } from 'react-router-dom'\r\nimport { renameListTC, createNewTaskTC, changeTaskTextTC, changeComplitedStatusTC, deleteTaskTC } from '../../redux/todoListReducer'\r\nimport DeleteWarning from './DeleteWarning/DeleteWarning'\r\nimport './List.scss'\r\nimport Task from './Task/Task'\r\nimport DeleteIMG from '../../assets/images/delete.svg'\r\nimport InfoIMG from '../../assets/images/info.svg'\r\nimport AddIMG from '../../assets/images/add.svg'\r\n\r\n\r\n\r\nconst List = ({ infoAboutList, tasks, renameListTC, createNewTaskTC, changeTaskTextTC, changeComplitedStatusTC, deleteTaskTC }) => {\r\n  const [editTitle, setEditTitle] = useState(false)\r\n  const [title, setTitle] = useState(infoAboutList.title)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setTitle(infoAboutList.title)\r\n  }, [infoAboutList.title])\r\n\r\n  const changeEditMode = () => {\r\n    if (editTitle && title != infoAboutList.title) renameListTC(infoAboutList.id, title)\r\n    setEditTitle(!editTitle)\r\n  }\r\n\r\n  const changeTitleText = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const keyDownEnter = (e) => {\r\n    if (e.code == \"Enter\") changeEditMode();\r\n  }\r\n\r\n  return (\r\n    <div className='list'>\r\n      <div className=\"list__title\" onDoubleClick={changeEditMode}>\r\n        {editTitle\r\n          ? <input\r\n            className=\"list__title_input input\"\r\n            type=\"text\"\r\n            value={title}\r\n            onKeyPress={keyDownEnter}\r\n            onChange={changeTitleText}\r\n            onBlur={changeEditMode}\r\n            autoFocus\r\n          />\r\n          : <span className=\"list__title_span\">{title}</span>\r\n        }\r\n        <div className=\"help-buttons\">\r\n          <span className='help-buttons__item info'><img onClick={changeEditMode} src={InfoIMG} alt=\"\" /></span>\r\n          <span className='help-buttons__item delete'><img onClick={() => history.push(`/delete-warning/${infoAboutList.id}`)} src={DeleteIMG} alt=\"\" /></span>\r\n        </div>\r\n      </div>\r\n      <div className=\"list__tasks\">\r\n        {tasks.map((item, index) => <Task\r\n          key={index}\r\n          changeTaskTextTC={changeTaskTextTC}\r\n          createNewTaskTC={createNewTaskTC}\r\n          changeComplitedStatusTC={changeComplitedStatusTC}\r\n          deleteTaskTC={deleteTaskTC}\r\n          {...item}\r\n        />)}\r\n      </div>\r\n      <div className=\"add-task\">\r\n        <img onClick={() => createNewTaskTC(infoAboutList.id)} src={AddIMG} alt=\"\" title=\"Add task\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, { renameListTC, createNewTaskTC, changeTaskTextTC, changeComplitedStatusTC, deleteTaskTC })(List)","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './Main.scss'\r\nimport { createNewListTC } from '../../redux/todoListReducer'\r\nimport List from '../List/List';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AddIMG from '../../assets/images/add.svg';\r\n\r\n\r\nconst Main = (props) => {\r\n  const [value, setValue] = useState();\r\n  const history = useHistory();\r\n  const changeInput = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const submit = () => {\r\n    props.createNewListTC(value)\r\n  }\r\n\r\n  return (\r\n    <div className='main'>\r\n      {/* <input type=\"text\" onChange={changeInput} value={value} />\r\n      <button onClick={submit}>Создать</button> */}\r\n      {props.lists.map((item, index) => <List key={index} infoAboutList={item} tasks={item.tasks} />)}\r\n      <div className=\"addList\"><NavLink to=\"/add-list\"><img src={AddIMG} alt=\"\" title=\"Add TODO list\" /></NavLink></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lists: state.todo.lists,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewListTC })(Main);","import { initializeUserTC } from \"./authReducer\"\r\nimport { getListsTC } from \"./todoListReducer\"\r\nimport * as uuid from 'uuid'\r\n\r\n\r\n// Action Type\r\nconst SET_INIT = 'SET_INIT'\r\n// Action Creator\r\nexport const setInitialize = () => ({ type: SET_INIT, })\r\n// Thunk Creator\r\nexport const initializeAppTC = () => async (dispatch) => {\r\n  // const promise = await dispatch(initializeUserTC());\r\n  if (!localStorage.getItem('data')) {\r\n    localStorage.setItem('data', '[{\"id\":\"fea4a820-5b5e-11ec-b52d-650f3b77cf7b\",\"title\":\"Список задач\",\"tasks\":[{\"id\":\"fe4c00d0-5b5e-11ec-b52d-650f3b77cf7b\",\"listID\":\"fea4a820-5b5e-11ec-b52d-650f3b77cf7b\",\"title\":\"задача\",\"completed\":true}]}]')\r\n  }\r\n  // window.uuid = uuid\r\n  await dispatch(getListsTC())\r\n  await dispatch(setInitialize())\r\n}\r\n\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n}\r\n\r\nconst initializeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INIT:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default initializeReducer","import './AddList.scss'\r\nimport * as cn from 'classnames';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createNewListTC } from '../../redux/todoListReducer';\r\nimport arrowExit from \"../../assets/images/arrow-exit.svg\";\r\nimport { compose } from 'redux';\r\nimport { Modal } from '../../hoc/Modal';\r\n\r\nconst AddList = (props) => {\r\n\r\n  const [value, setValue] = useState();\r\n  const history = useHistory();\r\n\r\n\r\n  const changeValue = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    if (!value) return;\r\n    const promise = await props.createNewListTC(value);\r\n    if (promise) props.unmount();\r\n  }\r\n  const keyDownEnter = (e) => {\r\n    if (e.code == \"Enter\") onSubmit();\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='add-list'>\r\n      <h3 className=\"modal_title\">Create List</h3>\r\n      <input autoFocus onKeyPress={keyDownEnter} onChange={changeValue} value={value} className='add-list_input input' type=\"text\" placeholder=\"Введите название\" />\r\n      <button onClick={onSubmit} className='add-list_btn btn'>Create</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  Modal,\r\n  connect(null, { createNewListTC }),\r\n)(AddList);","import logo from './logo.svg'\r\nimport './App.scss'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Header from './components/Header/Header'\r\nimport Footer from './components/Footer/Footer'\r\nimport Login from './components/Login/Login'\r\nimport { connect } from 'react-redux'\r\nimport Preloader from './components/Preloader/Preloader'\r\nimport Main from './components/Main/Main'\r\nimport { initializeAppTC } from './redux/initializeReducer'\r\nimport { saveChangesToLocalStorage } from './redux/todoListReducer'\r\nimport AddList from './components/AddList/AddList'\r\nimport DeleteWarning from './components/List/DeleteWarning/DeleteWarning'\r\n\r\nfunction App(props) {\r\n  useEffect(async () => {\r\n    await props.initializeAppTC()\r\n  }, [])\r\n  useEffect(async () => {\r\n    console.log('save changes')\r\n    await props.saveChangesToLocalStorage()\r\n  }, [props.lists])\r\n  // if (!props.initialized) return <Preloader />;\r\n  return (\r\n    <HashRouter >\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Route path='/login' render={() => <Login />} />\r\n        <Route path='/add-list' render={() => <AddList />} />\r\n        <Route path='/delete-warning/:id' render={() => <DeleteWarning />} />\r\n        <Main />\r\n        <Footer />\r\n      </div>\r\n    </HashRouter >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.init.initialized,\r\n  lists: state.todo.lists\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializeAppTC, saveChangesToLocalStorage })(App)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"./authReducer\";\r\nimport todoListReducer from \"./todoListReducer.js\";\r\nimport initializeReducer from \"./initializeReducer.js\"\r\n\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  todo: todoListReducer,\r\n  form: formReducer,\r\n  init: initializeReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore.js';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}